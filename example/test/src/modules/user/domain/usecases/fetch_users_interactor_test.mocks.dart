// Mocks generated by Mockito 5.2.0 from annotations
// in example/test/src/modules/user/domain/usecases/fetch_users_interactor_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:example/src/modules/common/domain/entities/paginated.dart'
    as _i2;
import 'package:example/src/modules/user/data/models/user_response_model.dart'
    as _i5;
import 'package:example/src/modules/user/data/repo/interface/user_repo.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePaginated_0<T> extends _i1.Fake implements _i2.Paginated<T> {}

/// A class which mocks [UserRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepo extends _i1.Mock implements _i3.UserRepo {
  MockUserRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Paginated<List<_i5.UserResponseModel>>> fetchUsers(int? page,
          {int? limit = 10}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchUsers, [page], {#limit: limit}),
          returnValue: Future<_i2.Paginated<List<_i5.UserResponseModel>>>.value(
              _FakePaginated_0<List<_i5.UserResponseModel>>())) as _i4
          .Future<_i2.Paginated<List<_i5.UserResponseModel>>>);
}
