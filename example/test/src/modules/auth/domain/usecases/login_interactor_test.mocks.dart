// Mocks generated by Mockito 5.2.0 from annotations
// in example/test/src/modules/auth/domain/usecases/login_interactor_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:example/src/modules/auth/data/models/login_response_model.dart'
    as _i2;
import 'package:example/src/modules/auth/data/repo/interface/auth_repo.dart'
    as _i3;
import 'package:example/src/modules/auth/data/repo/interface/auth_store_repo.dart'
    as _i6;
import 'package:example/src/modules/auth/domain/entities/params/login_param.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoginResponseModel_0 extends _i1.Fake
    implements _i2.LoginResponseModel {}

/// A class which mocks [AuthRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepo extends _i1.Mock implements _i3.AuthRepo {
  MockAuthRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LoginResponseModel> login(_i5.LoginParam? param) =>
      (super.noSuchMethod(Invocation.method(#login, [param]),
              returnValue: Future<_i2.LoginResponseModel>.value(
                  _FakeLoginResponseModel_0()))
          as _i4.Future<_i2.LoginResponseModel>);
}

/// A class which mocks [AuthStoreRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthStoreRepo extends _i1.Mock implements _i6.AuthStoreRepo {
  MockAuthStoreRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> storeToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#storeToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<String?> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
}
